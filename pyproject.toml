[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "codex-mail"
version = "0.1.0"
description = "Mail-like coordination platform for multi-agent coding workflows"
readme = "README_CODEX_MAIL.md"
requires-python = ">=3.14"
license = { text = "MIT" }
authors = [
  { name = "Codex Mail Contributors" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.14",
  "Topic :: Software Development :: Libraries",
  "Topic :: Utilities",
  "Typing :: Typed",
]
dependencies = [
  "fastmcp>=2.10.5",
  "uvicorn[standard]>=0.32.0",
  "fastapi>=0.110.0",
  "jinja2>=3.1.4",
  "markdown2>=2.4.12",
  "bleach>=6.1.0",
  "python-decouple>=3.8",
  "sqlmodel>=0.0.16",
  "sqlalchemy[asyncio]>=2.0.35",
  "asyncpg>=0.30.0",
  "aiosqlite>=0.20.0",
  "httpx[http2]>=0.27.2",
  "aiolimiter>=1.1.0",
  "tenacity>=8.3.0",
  "redis[hiredis]>=5.3.0",
  "rich>=13.9.1",
  "typer>=0.15.0",
  "structlog>=24.1.0",
  "orjson>=3.10.7,<4",
  "tiktoken>=0.7.0",
  "pillow>=10.4.0",
  "GitPython>=3.1.43",
  "filelock>=3.16.0",
  "jsonschema>=4.23.0",
  "attrs>=24.2.0",
  "authlib>=1.5.2,<1.6",
  "litellm>=1.40.0,<2",
  "pytest>=8.4.2",
  "ruff>=0.14.1",
]

[project.optional-dependencies]
dev = [
  "ruff>=0.5.7",
  "mypy>=1.11.1",
  "pytest>=8.3.3",
  "pytest-asyncio>=0.23.8",
  "pytest-cov>=5.0.0",
  "ipython>=8.27.0",
]

[project.urls]
Homepage = "https://github.com/ApexHockey/codex_mail"
Repository = "https://github.com/ApexHockey/codex_mail"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_agent_mail"]

[tool.hatch.build.targets.sdist]
exclude = ["/.venv", "/.vscode", "/.idea", "/.git", "/__pycache__", "*.py[cod]", "*.db*", ".DS_Store"]

[tool.ruff]
line-length = 120
target-version = "py314"

[tool.ruff.lint]
select = [
  "E",
  "W",
  "F",
  "B",
  "I",
  "C4",
  "ASYNC",
  "A",
  "RUF",
  "SIM",
  "PTH",
  "FA",
]
ignore = [
  "E501",
]

[tool.ruff.lint.isort]
known-first-party = ["mcp_agent_mail"]
combine-as-imports = true

[tool.mypy]
python_version = "3.14"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
strict_optional = true
plugins = []

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = [
  "--strict-markers",
  "--cov=mcp_agent_mail",
  "--cov-report=term-missing",
]
pythonpath = ["src"]
filterwarnings = [
  "ignore:coroutine 'FastMCP.get_tool' was never awaited:RuntimeWarning",
]

[dependency-groups]
dev = [
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "pytest-timeout>=2.4.0",
]
